{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPNuhcDbMoHlbm/eM5gn0As",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/islaynnegabrielly/Projeto-Objetivos/blob/main/introdu%C3%A7%C3%A3o_a_python.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## aula 1\n"
      ],
      "metadata": {
        "id": "5meSpRBgaxkv"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "50YSBHfV92Dj",
        "outputId": "b5c1b224-e27a-4ff4-b674-00936dd5ed83"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "I competição de programação da Start\n"
          ]
        }
      ],
      "source": [
        "print(\"I competição de programação da Start\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ano = \"II\"\n",
        "\n",
        "print(ano, \"Competição de programação da Star\")"
      ],
      "metadata": {
        "id": "zVECdKWW-yFP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "20d74529-168c-4074-9fbf-34baa5c260d6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "II Competição de programação da Star\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"{ano} Competição de Programação da Star\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1ZHtJvmQZgr9",
        "outputId": "aae2924c-578a-47cb-9fd3-0d5f50f30cae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "II Competição de Programação da Star\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio"
      ],
      "metadata": {
        "id": "8blDywmK24Cw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ano = \"II\"\n",
        "local = \"São josé dos pinhais\"\n",
        "tema = \"Inteligência Artificial\"\n",
        "\n",
        "print(f\"{ano} Competição de Programação da Start - Local: {local} - Tema: {tema}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J_euvRqd26SX",
        "outputId": "7b95d8d1-49c5-49c4-a8ca-0cd38972cfbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "II Competição de Programação da Start - Local: São josé dos pinhais - Tema: Inteligência Artificial\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## aula 2\n"
      ],
      "metadata": {
        "id": "2YdGfo8na34L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "livro_ficcao = 10\n",
        "livro_nficcao = 8\n",
        "livro_infantil = 6\n",
        "\n",
        "pontos_rodrigo = livro_ficcao + livro_nficcao + livro_infantil\n",
        "\n",
        "print(f\"Os pontos totais do Rodrigo são: {pontos_rodrigo}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jZizdGlwbV6a",
        "outputId": "7f2a6e70-da7e-4378-d301-81acbc12a279"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Os pontos totais do Rodrigo são: 24\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio"
      ],
      "metadata": {
        "id": "MpQ0oAl9dMVS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "livro_ficcao = 2\n",
        "livro_infantil = 5\n",
        "\n",
        "pontos_ana = livro_ficcao + livro_infantil\n",
        "\n",
        "print(f\"Os pontos totais da Ana são: {pontos_ana}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bnVtHSjtdPa5",
        "outputId": "085ecc26-e156-47d3-ad43-b27ca3e33f1f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Os pontos totais da Ana são: 7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"Os pontos totais do Rodrigo e da Ana são: {pontos_rodrigo + pontos_ana}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I3rEgOYgeE6a",
        "outputId": "75ab5e44-fb04-4c74-985b-6590e801537e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Os pontos totais do Rodrigo e da Ana são: 31\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio 2"
      ],
      "metadata": {
        "id": "LRqYNa1oe8wk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fase_facil = 3 * 10\n",
        "fase_media =  2 * 25\n",
        "fase_dificil = 1 * 50\n",
        "fase_lendaria = 1 * 100\n",
        "\n",
        "pontos_joão = fase_facil + fase_media + fase_dificil + fase_lendaria\n",
        "\n",
        "print(f\"Os pontos totais do joão no RPG são: {pontos_joão}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w3rhJpsSe_Xy",
        "outputId": "4b1d4177-1e9e-43ed-a707-af14ae75e6f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Os pontos totais do joão no RPG são: 230\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_fases = 3 + 2 + 1 + 1\n",
        "\n",
        "media_fases = pontos_joão / total_fases\n",
        "\n",
        "print(f\"A média de pontos por fase de João são:{media_fases}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HyKYsqLlgqap",
        "outputId": "55ec2dd4-af22-47cb-f148-788d5023372f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A média de pontos por fase de João são:32.857142857142854\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## aula 3"
      ],
      "metadata": {
        "id": "07dzWr-jla3U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "total_figurinhas = int(input(\"Digite o total de figurinhas: \"))\n",
        "numero_amigos = int(input(\"Digite o numero de amigos: \"))\n",
        "\n",
        "figurinhas_amigos = total_figurinhas// (numero_amigos + 2)\n",
        "figurinhas_joao = 2 * figurinhas_amigos\n",
        "\n",
        "print(f\"João recebeu {figurinhas_joao} figurinhas.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TB_hcdbWlePk",
        "outputId": "9f9e76f2-88a5-4539-8f5a-42e5d7bc4fcf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o total de figurinhas: 100\n",
            "Digite o numero de amigos: 5\n",
            "João recebeu 28 figurinhas.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio 1"
      ],
      "metadata": {
        "id": "zJ_KD1KF4l9r"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "total_de_figurinhas = int(input(\"Digite o total de figurinhas (incluindo as extras da mochila): \"))\n",
        "numero_de_amigos = int(input(\"Digite o número de amigos (sem contar o João): \"))\n",
        "\n",
        "\n",
        "quantidade_total_de_pessoas = numero_de_amigos + 2\n",
        "\n",
        "if total_de_figurinhas % quantidade_total_de_pessoas == 0:\n",
        "    figurinhas_amigo = total_de_figurinhas // quantidade_total_de_pessoas\n",
        "    figurinhas_joao = 2 * figurinhas_amigo\n",
        "\n",
        "    print(\"Cada amigo recebeu\", figurinhas_amigo, \"figurinhas.\")\n",
        "    print(\"João recebeu\", figurinhas_joao, \"figurinhas.\")\n",
        "else:\n",
        "    print(\"Não é possível dividir as figurinhas de forma justa, sem sobrar.\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e0k_a02y4prF",
        "outputId": "e5493438-b38f-4609-ddac-15d06d879189"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o total de figurinhas (incluindo as extras da mochila): 130\n",
            "Digite o número de amigos (sem contar o João): 5\n",
            "Não é possível dividir as figurinhas de forma justa, sem sobrar.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio 2"
      ],
      "metadata": {
        "id": "vFOaZMipsNr7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "total_moedas = int(input(\"Digite o total de moedas de ouro: \"))\n",
        "total_piratas = int(input(\"Digite o número total de piratas: \"))\n",
        "total_navios = int(input(\"Digite o número de navios (um capitão por navio): \"))\n",
        "\n",
        "total_partes = total_piratas + (2 * total_navios)\n",
        "\n",
        "moedas_por_parte = total_moedas // total_partes\n",
        "\n",
        "moedas_capitao = 2 * moedas_por_parte\n",
        "\n",
        "print(f\"Cada capitão receberá {moedas_capitao} moedas de ouro.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DD4_cSi_sR74",
        "outputId": "6fefbb48-377a-4f44-ac44-3c2b9546d32d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o total de moedas de ouro: 210\n",
            "Digite o número total de piratas: 20\n",
            "Digite o número de navios (um capitão por navio): 5\n",
            "Cada capitão receberá 14 moedas de ouro.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## aula 4"
      ],
      "metadata": {
        "id": "EextrtrJuv08"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numero_alunos = int(input(\"Digite a quantidade de alunos: \"))\n",
        "numero_monitores = int(input(\"Digite a quantidade de monitores: \"))\n",
        "resposta_positiva = \" cabe a galera\"\n",
        "resposta_negativa = \"muita gente\"\n",
        "\n",
        "if numero_alunos + numero_monitores <= 50:\n",
        "  print(resposta_positiva)\n",
        "else:\n",
        "    print(resposta_negativa)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y2ck8gKiu4Qz",
        "outputId": "0e75d6fd-823a-4c63-fbdf-a8659dd03cc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a quantidade de alunos: 55\n",
            "Digite a quantidade de monitores: 10\n",
            "muita gente\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio 1"
      ],
      "metadata": {
        "id": "fqeqdZSsyJR0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numero_alunos = int(input(\"Digite a quantidade de aluno: \"))\n",
        "numero_monitores = int(input(\"Digite a quantidade de monitores: \"))\n",
        "numero_professores = int(input(\"Digite a quantidade de professores: \"))\n",
        "resposta_positiva = \" cabe a galera\"\n",
        "resposta_negativa = \"não, tera que fazer mais de uma viagem\"\n",
        "\n",
        "if numero_alunos + numero_monitores + numero_professores <= 30:\n",
        "  print(resposta_positiva)\n",
        "else:\n",
        "    print(resposta_negativa)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c7hSS0y2yMbG",
        "outputId": "59f9f168-b28c-432a-e575-525dbfc78c7b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a quantidade de aluno: 30\n",
            "Digite a quantidade de monitores: 9\n",
            "Digite a quantidade de professores: 4\n",
            "não, tera que fazer mais de uma viagem\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## desafio 2"
      ],
      "metadata": {
        "id": "3xTjN0BU1lvz"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "oBz9-HGw1n4w"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}